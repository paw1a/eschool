// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/paw1a/eschool/internal/core/domain"
	mock "github.com/stretchr/testify/mock"
)

// ObjectStorage is an autogenerated mock type for the IObjectStorage type
type ObjectStorage struct {
	mock.Mock
}

// SaveFile provides a mock function with given fields: ctx, file
func (_m *ObjectStorage) SaveFile(ctx context.Context, file domain.File) (domain.Url, error) {
	ret := _m.Called(ctx, file)

	if len(ret) == 0 {
		panic("no return value specified for SaveFile")
	}

	var r0 domain.Url
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.File) (domain.Url, error)); ok {
		return rf(ctx, file)
	}
	if rf, ok := ret.Get(0).(func(context.Context, domain.File) domain.Url); ok {
		r0 = rf(ctx, file)
	} else {
		r0 = ret.Get(0).(domain.Url)
	}

	if rf, ok := ret.Get(1).(func(context.Context, domain.File) error); ok {
		r1 = rf(ctx, file)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewObjectStorage creates a new instance of ObjectStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewObjectStorage(t interface {
	mock.TestingT
	Cleanup(func())
}) *ObjectStorage {
	mock := &ObjectStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
